{{- if not (eq .Values.chartMode "custom") -}}
  {{- $logLevel := (coalesce .Values.logLevel .Values.log.level "INFO") -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  {{- if .Values.annotations.config }}
  annotations:
    {{- toYaml .Values.annotations.config | nindent 4 }}
  {{- end }}
data:
  teleport.yaml: |
  {{- if eq .Values.proxyListenerMode "multiplex" }}
    version: v2
  {{- end }}
    teleport:
      log:
        severity: {{ $logLevel }}
        output: {{ .Values.log.output }}
        format:
          output: {{ .Values.log.format }}
          extra_fields: {{ .Values.log.extraFields | toJson }}
  {{- if eq .Values.chartMode "aws" }}
      storage:
        type: dynamodb
        region: {{ required "aws.region is required in chart values" .Values.aws.region }}
        table_name: {{ required "aws.backendTable is required in chart values" .Values.aws.backendTable }}
        {{- if .Values.aws.auditLogMirrorOnStdout }}
        audit_events_uri: ['dynamodb://{{ required "aws.auditLogTable is required in chart values" .Values.aws.auditLogTable }}', 'stdout://']
        {{- else }}
        audit_events_uri: ['dynamodb://{{ required "aws.auditLogTable is required in chart values" .Values.aws.auditLogTable }}']
        {{- end }}
        audit_sessions_uri: s3://{{ required "aws.sessionRecordingBucket is required in chart values" .Values.aws.sessionRecordingBucket }}
        continuous_backups: {{ required "aws.backups is required in chart values" .Values.aws.backups }}
  {{- else if eq .Values.chartMode "gcp" }}
      storage:
        type: firestore
        project_id: {{ required "gcp.projectId is required in chart values" .Values.gcp.projectId }}
        collection_name: {{ required "gcp.backendTable is required in chart values" .Values.gcp.backendTable }}
        {{- if .Values.gcp.credentialSecretName }}
        credentials_path: /etc/teleport-secrets/gcp-credentials.json
        {{- end }}
        {{- if .Values.gcp.auditLogMirrorOnStdout }}
        audit_events_uri: ['firestore://{{ required "gcp.auditLogTable is required in chart values" .Values.gcp.auditLogTable }}?projectID={{ required "gcp.projectId is required in chart values" .Values.gcp.projectId }}{{ empty .Values.gcp.credentialSecretName | ternary "" "&credentialsPath=/etc/teleport-secrets/gcp-credentials.json"}}', 'stdout://']
        {{- else }}
        audit_events_uri: ['firestore://{{ required "gcp.auditLogTable is required in chart values" .Values.gcp.auditLogTable }}?projectID={{ required "gcp.projectId is required in chart values" .Values.gcp.projectId }}{{ empty .Values.gcp.credentialSecretName | ternary "" "&credentialsPath=/etc/teleport-secrets/gcp-credentials.json"}}']
        {{- end }}
        audit_sessions_uri: "gs://{{ required "gcp.sessionRecordingBucket is required in chart values" .Values.gcp.sessionRecordingBucket }}?projectID={{ required "gcp.projectId is required in chart values" .Values.gcp.projectId }}{{ empty .Values.gcp.credentialSecretName | ternary "" "&credentialsPath=/etc/teleport-secrets/gcp-credentials.json"}}"
  {{- end }}
    auth_service:
      enabled: true
      cluster_name: {{ required "clusterName is required in chart values" .Values.clusterName }}
  {{- if .Values.enterprise }}
      license_file: '/var/lib/license/license.pem'
  {{- end }}
      authentication:
        type: {{ required "authenticationType is required in chart values" .Values.authenticationType }}
  {{- if .Values.authenticationSecondFactor }}
    {{- if .Values.authenticationSecondFactor.secondFactor }}
        second_factor: {{ .Values.authenticationSecondFactor.secondFactor }}
    {{- end }}
    {{- if not (or (eq .Values.authenticationSecondFactor.secondFactor "off") (eq .Values.authenticationSecondFactor.secondFactor "otp")) }}
        webauthn:
          rp_id: {{ required "clusterName is required in chart values" .Values.clusterName }}
      {{- if .Values.authenticationSecondFactor.webauthn }}
        {{- if .Values.authenticationSecondFactor.webauthn.attestationAllowedCas }}
          attestation_allowed_cas:
          {{- toYaml .Values.authenticationSecondFactor.webauthn.attestationAllowedCas | nindent 12 }}
        {{- end }}
        {{- if .Values.authenticationSecondFactor.webauthn.attestationDeniedCas }}
          attestation_denied_cas:
          {{- toYaml .Values.authenticationSecondFactor.webauthn.attestationDeniedCas | nindent 12 }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- if eq .Values.proxyListenerMode "multiplex" }}
      proxy_listener_mode: multiplex
  {{- end }}
    kubernetes_service:
      enabled: true
  {{- if eq .Values.proxyListenerMode "multiplex" }}
      listen_addr: 0.0.0.0:443
  {{- else if not .Values.proxyListenerMode }}
      listen_addr: 0.0.0.0:3027
  {{- end }}
  {{- if .Values.kubeClusterName }}
      kube_cluster_name: {{ .Values.kubeClusterName }}
  {{- else }}
      kube_cluster_name: {{ .Values.clusterName }}
  {{- end }}
  {{- if .Values.labels }}
      labels:
    {{- toYaml .Values.labels | nindent 8 }}
  {{- end }}
    proxy_service:
      public_addr: '{{ required "clusterName is required in chart values" .Values.clusterName }}:443'
  {{- if not .Values.proxyListenerMode }}
      kube_listen_addr: 0.0.0.0:3026
      mysql_listen_addr: 0.0.0.0:3036
    {{- if .Values.separatePostgresListener }}
      postgres_listen_addr: 0.0.0.0:5432
      postgres_public_addr: {{ .Values.clusterName }}:5432
    {{- end }}
    {{- if .Values.separateMongoListener }}
      mongo_listen_addr: 0.0.0.0:27017
      mongo_public_addr: {{ .Values.clusterName }}:27017
    {{- end }}
  {{- end }}
      enabled: true
  {{- if or .Values.highAvailability.certManager.enabled .Values.tls.existingSecretName }}
      https_keypairs:
      - key_file: /etc/teleport-tls/tls.key
        cert_file: /etc/teleport-tls/tls.crt
  {{- else if .Values.acme }}
      acme:
        enabled: {{ .Values.acme }}
        email: {{ required "acmeEmail is required in chart values" .Values.acmeEmail }}
    {{- if .Values.acmeURI }}
        uri: {{ .Values.acmeURI }}
    {{- end }}
  {{- end }}
    ssh_service:
      enabled: false
{{ if .Values.operator }}
  operator.yaml: |
    apiVersion: config.teleport.dev/v10
    kind: SidecarConfig
    teleport:
      config: /etc/teleport/teleport.yaml
    scope:
      namespace: {{ .Release.Namespace }}
{{ end }}
{{- end -}}
